# Spencer Denim Task Manager - Production Environment
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: spencer-denim-db-prod
    environment:
      POSTGRES_DB: spencer_denim_prod
      POSTGRES_USER: spencer_prod_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-spencer_secure_password_2024}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - spencer-prod-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spencer_prod_user -d spencer_denim_prod"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis for Caching and Sessions
  redis:
    image: redis:7-alpine
    container_name: spencer-denim-redis-prod
    volumes:
      - redis_prod_data:/data
    networks:
      - spencer-prod-network
    restart: always
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_password_2024}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Next.js Application (Production)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: spencer-denim-app-prod
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://spencer_prod_user:${POSTGRES_PASSWORD:-spencer_secure_password_2024}@postgres:5432/spencer_denim_prod
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_secure_password_2024}@redis:6379
      - NEXT_TELEMETRY_DISABLED=1
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret-key}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    networks:
      - spencer-prod-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: spencer-denim-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - spencer-prod-network
    depends_on:
      - app
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  spencer-prod-network:
    driver: bridge
