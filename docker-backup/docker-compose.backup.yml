  # pgAdmin for Database Management (works with Supabase too)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: spencer-denim-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@spencerdenim.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stoppedim Task Manager - Development Environment (Supabase Version)  # pgAdmin for Database Management (works with Supabase too)
  pgadmin:
    image: dpage/pgladmin4:latest
    container_name: spencer-denim-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@spencerdenim.com
      PGLADMIN_DEFAULT_PASSWORD: admin123
      PGLADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgladmin_data:/var/lib/pgladmin
    restart: unless-stopped

services:
  # Redis for Caching (Optional - for future scaling)
  redis:
    image: redis:7-alpine
    container_name: spencer-denim-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Next.js Application (Development) - Using Host Network for Supabase Access
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: spencer-denim-app
    network_mode: host
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:khabibnurmagomedoV@db.xfzkkmbidevzowixapuh.supabase.co:5432/postgres?sslmode=prefer
      - REDIS_URL=redis://localhost:6379
      - NEXT_TELEMETRY_DISABLED=1
      - NEXTAUTH_SECRET=your-development-secret-key-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - APP_NAME=Spencer Denim Task Manager
      - APP_VERSION=1.0.0
      - APP_ENVIRONMENT=development
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: sync
          path: ./prisma
          target: /app/prisma
        - action: rebuild
          path: package.json

  # Optional: PostgreSQL Database (commented out since using Supabase)
  # Uncomment if you want to use local database instead of Supabase
  # postgres:
  #   image: postgres:16-alpine
  #   container_name: spencer-denim-db
  #   environment:
  #     POSTGRES_DB: spencer_denim_db
  #     POSTGRES_USER: spencer_user
  #     POSTGRES_PASSWORD: spencer_password_2024
  #     PGDATA: /var/lib/postgresql/data/pgdata
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
  #   networks:
  #     - spencer-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U spencer_user -d spencer_denim_db"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # pgAdmin for Database Management (works with Supabase too)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: spencer-denim-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@spencerdenim.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - spencer-network
    restart: unless-stopped

volumes:
  # postgres_data:  # Commented out since using Supabase
  #   driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
